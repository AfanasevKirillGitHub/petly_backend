{
  "openapi": "3.0.0",
  "info": {
    "title": "Petly",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://your-pets.onrender.com/api",
      "description": "Website for finding and selling pets"
    }
  ],
  "paths": {
    "/news": {
      "get": {
        "summary": "Get news method",
        "tags": ["News"],
        "operationId": "getAllNews",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Successfully"
                    },
                    "news": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "$ref": "#/components/schemas/News/properties/_id"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/News/properties/title/properties/en"
                            }
                          }
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/News/properties/description/properties/en"
                            }
                          }
                        },
                        "date": {
                          "$ref": "#/components/schemas/News/properties/date"
                        },
                        "img": {
                          "$ref": "#/components/schemas/News/properties/img"
                        },
                        "link": {
                          "$ref": "#/components/schemas/News/properties/link"
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Choose another type of language. Available options: ua, en."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "summary": "Get info about current user",
        "tags": ["User"],
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "default": "success"
                    },
                    "dataUser": {
                      "type": "object",
                      "properties": {
                        "avatarURL": {
                          "$ref": "#/components/schemas/User/properties/avatarURL"
                        },
                        "name": {
                          "$ref": "#/components/schemas/User/properties/name"
                        },
                        "email": {
                          "$ref": "#/components/schemas/User/properties/email"
                        },
                        "birthday": {
                          "$ref": "#/components/schemas/User/properties/birthday"
                        },
                        "phone": {
                          "$ref": "#/components/schemas/User/properties/phone"
                        },
                        "city": {
                          "$ref": "#/components/schemas/User/properties/city"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "summary": "Register new user",
        "tags": ["User"],
        "operationId": "register",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/User/properties/name"
                  },
                  "email": {
                    "$ref": "#/components/schemas/User/properties/email"
                  },
                  "password": {
                    "$ref": "#/components/schemas/User/properties/password"
                  },
                  "city": {
                    "$ref": "#/components/schemas/User/properties/city"
                  },
                  "phone": {
                    "$ref": "#/components/schemas/User/properties/phone"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Registration completed successfully"
                    },
                    "dataUser": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "$ref": "#/components/schemas/User/properties/name"
                        },
                        "email": {
                          "$ref": "#/components/schemas/User/properties/email"
                        },
                        "birthday": {
                          "$ref": "#/components/schemas/User/properties/birthday"
                        },
                        "phone": {
                          "$ref": "#/components/schemas/User/properties/phone"
                        },
                        "avatarURL": {
                          "$ref": "#/components/schemas/User/properties/avatarURL"
                        },
                        "token": {
                          "$ref": "#/components/schemas/User/properties/token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Email in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "operationId": "login",
        "requestBody": {
          "description": "Login data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "$ref": "#/components/schemas/User/properties/email"
                  },
                  "password": {
                    "$ref": "#/components/schemas/User/properties/password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Login completed successfully"
                    },
                    "dataUser": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "$ref": "#/components/schemas/User/properties/name"
                        },
                        "email": {
                          "$ref": "#/components/schemas/User/properties/email"
                        },
                        "birthday": {
                          "$ref": "#/components/schemas/User/properties/birthday"
                        },
                        "phone": {
                          "$ref": "#/components/schemas/User/properties/phone"
                        },
                        "avatarURL": {
                          "$ref": "#/components/schemas/User/properties/avatarURL"
                        },
                        "token": {
                          "$ref": "#/components/schemas/User/properties/token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["User"],
        "operationId": "logout",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Logout completed successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/jwtrefresh": {
      "post": {
        "summary": "Refresh user token",
        "tags": ["User"],
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Token refresh completed successfully"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzA0Yzg0YmQxNjgwMzBkOTIyMDQ3YyIsImlhdCI6MTY4MDk0NTI5NSwiZXhwIjoxNjgxMDMxNjk1fQ.mqGKd15X-SXUafsR9tFw2BucuG9bmINW_rac35ETj4s"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "summary": "Update user data",
        "tags": ["User"],
        "operationId": "update",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User object that needs to be added to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/User/properties/name"
                  },
                  "city": {
                    "$ref": "#/components/schemas/User/properties/city"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message", "user"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Update completed successfully"
                    },
                    "user": {
                      "type": "object",
                      "default": {
                        "name": "Ivan Petrenko",
                        "city": "Odesa"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/notices": {
      "get": {
        "summary": "Get all notices method",
        "tags": ["Notice"],
        "operationId": "getAllNotices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Successfully"
                    },
                    "notices": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "$ref": "#/components/schemas/Notice/properties/_id"
                        },
                        "category": {
                          "$ref": "#/components/schemas/Notice/properties/category"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                            }
                          }
                        },
                        "name": {
                          "$ref": "#/components/schemas/Notice/properties/name"
                        },
                        "birthdate": {
                          "$ref": "#/components/schemas/Notice/properties/birthdate"
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                            }
                          }
                        },
                        "sex": {
                          "$ref": "#/components/schemas/Notice/properties/sex"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/city/properties/en"
                                }
                              }
                            },
                            "region": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/region/properties/en"
                                }
                              }
                            }
                          }
                        },
                        "comments": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                            }
                          }
                        },
                        "price": {
                          "type": "number",
                          "default": 0,
                          "description": "Pet's price"
                        },
                        "favorite": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notice status"
                        },
                        "avatarURL": {
                          "type": "string",
                          "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
                          "description": "Notice image"
                        },
                        "owner": {
                          "type": "string",
                          "example": "642fdf8745bc73b2aecbae7b",
                          "description": "Owner's unique identifier."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice creating"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice updating"
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Choose another type of language. Available options: ua, en."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new notice",
        "tags": ["Notice"],
        "operationId": "addNotice",
        "requestBody": {
          "description": "The new notice object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "$ref": "#/components/schemas/Notice/properties/category"
                  },
                  "title": {
                    "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                  },
                  "name": {
                    "$ref": "#/components/schemas/Notice/properties/name"
                  },
                  "birthdate": {
                    "$ref": "#/components/schemas/Notice/properties/birthdate"
                  },
                  "breed": {
                    "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                  },
                  "sex": {
                    "$ref": "#/components/schemas/Notice/properties/sex"
                  },
                  "location": {
                    "type": "string",
                    "example": "Vorzel, Kyiv"
                  },
                  "comments": {
                    "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                  },
                  "price": {
                    "$ref": "#/components/schemas/Notice/properties/price"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "Select notice image"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "$ref": "#/components/schemas/Notice/properties/category"
                    },
                    "title": {
                      "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                    },
                    "name": {
                      "$ref": "#/components/schemas/Notice/properties/name"
                    },
                    "birthdate": {
                      "$ref": "#/components/schemas/Notice/properties/birthdate"
                    },
                    "breed": {
                      "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                    },
                    "sex": {
                      "$ref": "#/components/schemas/Notice/properties/sex"
                    },
                    "location": {
                      "type": "string",
                      "example": "Vorzel, Kyiv"
                    },
                    "comments": {
                      "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                    },
                    "price": {
                      "$ref": "#/components/schemas/Notice/properties/price"
                    },
                    "avatarURL": {
                      "type": "string",
                      "description": "Notice image"
                    },
                    "idCloudAvatar": {
                      "type": "string",
                      "description": "Notice image"
                    },
                    "owner": {
                      "type": "string",
                      "description": "Notice owner's ID",
                      "example": "6438255d9ef48a24e5d81693"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Choose another type of language. Available options: ua, en."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notices/card/{noticeId}": {
      "get": {
        "summary": "Get notice by ID method",
        "tags": ["Notice"],
        "operationId": "getNoticeById",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "description": "Notice ID",
            "schema": {
              "type": "string"
            },
            "example": "642fdf8745bc73b2aecbae7b"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notice": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "$ref": "#/components/schemas/Notice/properties/_id"
                        },
                        "category": {
                          "$ref": "#/components/schemas/Notice/properties/category"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                            }
                          }
                        },
                        "name": {
                          "$ref": "#/components/schemas/Notice/properties/name"
                        },
                        "birthdate": {
                          "$ref": "#/components/schemas/Notice/properties/birthdate"
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                            }
                          }
                        },
                        "sex": {
                          "$ref": "#/components/schemas/Notice/properties/sex"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/city/properties/en"
                                }
                              }
                            },
                            "region": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/region/properties/en"
                                }
                              }
                            }
                          }
                        },
                        "comments": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                            }
                          }
                        },
                        "price": {
                          "type": "number",
                          "default": 0,
                          "description": "Pet's price"
                        },
                        "favorite": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notice status"
                        },
                        "avatarURL": {
                          "type": "string",
                          "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
                          "description": "Notice image"
                        },
                        "owner": {
                          "type": "string",
                          "example": "642fdf8745bc73b2aecbae7b",
                          "description": "Owner's unique identifier."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice creating"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice updating"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Invalid id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/notices/{category}": {
      "get": {
        "summary": "Get notices by category method",
        "tags": ["Notice"],
        "operationId": "getNoticesByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "Category name",
            "schema": {
              "type": "string"
            },
            "example": "sell"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Successfully"
                    },
                    "notices": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "$ref": "#/components/schemas/Notice/properties/_id"
                        },
                        "category": {
                          "$ref": "#/components/schemas/Notice/properties/category"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                            }
                          }
                        },
                        "name": {
                          "$ref": "#/components/schemas/Notice/properties/name"
                        },
                        "birthdate": {
                          "$ref": "#/components/schemas/Notice/properties/birthdate"
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                            }
                          }
                        },
                        "sex": {
                          "$ref": "#/components/schemas/Notice/properties/sex"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/city/properties/en"
                                }
                              }
                            },
                            "region": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/region/properties/en"
                                }
                              }
                            }
                          }
                        },
                        "comments": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                            }
                          }
                        },
                        "price": {
                          "type": "number",
                          "default": 0,
                          "description": "Pet's price"
                        },
                        "favorite": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notice status"
                        },
                        "avatarURL": {
                          "type": "string",
                          "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
                          "description": "Notice image"
                        },
                        "owner": {
                          "type": "string",
                          "example": "642fdf8745bc73b2aecbae7b",
                          "description": "Owner's unique identifier."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice creating"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice updating"
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Choose another type of language. Available options: ua, en."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/notices/own": {
      "get": {
        "summary": "Get notices of current user",
        "tags": ["Notice"],
        "operationId": "getOwnNotices",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Successfully"
                    },
                    "notices": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "$ref": "#/components/schemas/Notice/properties/_id"
                        },
                        "category": {
                          "$ref": "#/components/schemas/Notice/properties/category"
                        },
                        "title": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/title/properties/en"
                            }
                          }
                        },
                        "name": {
                          "$ref": "#/components/schemas/Notice/properties/name"
                        },
                        "birthdate": {
                          "$ref": "#/components/schemas/Notice/properties/birthdate"
                        },
                        "breed": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/breed/properties/en"
                            }
                          }
                        },
                        "sex": {
                          "$ref": "#/components/schemas/Notice/properties/sex"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/city/properties/en"
                                }
                              }
                            },
                            "region": {
                              "type": "object",
                              "properties": {
                                "en": {
                                  "$ref": "#/components/schemas/Notice/properties/location/properties/region/properties/en"
                                }
                              }
                            }
                          }
                        },
                        "comments": {
                          "type": "object",
                          "properties": {
                            "en": {
                              "$ref": "#/components/schemas/Notice/properties/comments/properties/en"
                            }
                          }
                        },
                        "price": {
                          "type": "number",
                          "default": 0,
                          "description": "Pet's price"
                        },
                        "favorite": {
                          "type": "boolean",
                          "default": false,
                          "description": "Notice status"
                        },
                        "avatarURL": {
                          "type": "string",
                          "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
                          "description": "Notice image"
                        },
                        "owner": {
                          "type": "string",
                          "example": "642fdf8745bc73b2aecbae7b",
                          "description": "Owner's unique identifier."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice creating"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-04-12T07:28:49.493Z",
                          "description": "Backend-generated date and time of notice updating"
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/notices/favorites/{noticeId}": {
      "post": {
        "summary": "Add the notice to favorites",
        "tags": ["Notice"],
        "operationId": "addNoticeFavorite",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "description": "Notice ID",
            "schema": {
              "type": "string"
            },
            "example": "6438255d9ef48a24e5d81693"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "example": "6438255d9er48a24e5d81603"
                    },
                    "noticeId": {
                      "type": "string",
                      "example": "6438255d9er48a24e5d81603"
                    },
                    "message": {
                      "type": "string",
                      "default": "success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Invalid id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Notice already added to favorites"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notices/own/{noticeId}": {
      "delete": {
        "summary": "Delete notice by ID",
        "tags": ["Notice"],
        "operationId": "deleteOwnNoticeById",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "description": "Notice ID",
            "schema": {
              "type": "string"
            },
            "example": "6438255d9ef48a24e5d81693"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/pets": {
      "get": {
        "summary": "Get current user's pets",
        "tags": ["Pet"],
        "operationId": "getAllUserPets",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add pet",
        "tags": ["Pet"],
        "operationId": "addPet",
        "requestBody": {
          "description": "New pet's data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/Pet/properties/name"
                  },
                  "birth": {
                    "$ref": "#/components/schemas/Pet/properties/birth"
                  },
                  "breed": {
                    "$ref": "#/components/schemas/Pet/properties/breed"
                  },
                  "photo": {
                    "type": "string"
                  },
                  "comments": {
                    "$ref": "#/components/schemas/Pet/properties/comments"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/pets/{petsId}": {
      "delete": {
        "summary": "Delete user's pet",
        "tags": ["Pet"],
        "operationId": "removePet",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "The token issued to the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Pet deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "{petsId} is not valid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "Add service",
        "tags": ["Service"],
        "operationId": "getAllServices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Successfully"
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "$ref": "#/components/schemas/Service/properties/name/properties/en"
                        },
                        "time": {
                          "$ref": "#/components/schemas/Service/properties/time/properties/en"
                        },
                        "address": {
                          "$ref": "#/components/schemas/Service/properties/address/properties/en"
                        },
                        "email": {
                          "$ref": "#/components/schemas/Service/properties/email"
                        },
                        "phone": {
                          "$ref": "#/components/schemas/Service/properties/phone"
                        },
                        "createdAt": {
                          "$ref": "#/components/schemas/Service/properties/createdAt"
                        },
                        "updatedAt": {
                          "$ref": "#/components/schemas/Service/properties/updatedAt"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "Some error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ServerError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "News": {
        "type": "object",
        "required": ["title", "description", "date", "img", "link"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Backend-generated unique identifier."
          },
          "title": {
            "type": "object",
            "required": ["en", "ua"],
            "properties": {
              "en": {
                "type": "string",
                "example": "The Rivne Zoo took half a thousand rescued bats for the winter"
              },
              "ua": {
                "type": "string",
                "example": "Рівненський зоопарк взяв на зимівлю півтисячі врятованих кажанів"
              }
            }
          },
          "description": {
            "type": "object",
            "required": ["en", "ua"],
            "properties": {
              "en": {
                "type": "string",
                "example": "More than half a thousand bats were brought to the Rivne Zoo for winter…"
              },
              "ua": {
                "type": "string",
                "example": "До Рівненського зоопарку на зимівлю привезли понад півтисячі кажанів…"
              }
            }
          },
          "date": {
            "type": "string",
            "example": "1681150875288"
          },
          "img": {
            "type": "string",
            "example": "https://lh3.googleusercontent.com/D1eQiyDJxmSpR-8z5TBgQWvFk_KidIpzQA6pLm_viQYwXyWcmYqwJsyMOGQUCkXRx5cz7TdzY46B3zgVlaemJ4bKNnHmbBx7gi0B8II"
          },
          "link": {
            "type": "string",
            "example": "https://zaxid.net/rivnenskiy_zoopark_vzyav_na_zimivlyu_pivtisyachi_vryatovanih_kazhaniv_n1558587"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["name", "email", "password", "city", "phone"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Backend-generated unique identifier."
          },
          "name": {
            "type": "string",
            "example": "Ivan Petrenko",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "example": "ivan_petrenko@mail.com",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "example": "ivan123456petrenko",
            "description": "User's password. At least 6 characters"
          },
          "city": {
            "type": "string",
            "example": "Odesa",
            "description": "User's city"
          },
          "phone": {
            "type": "string",
            "example": "066-555-44-33",
            "description": "User's phone number"
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "User's day of birth"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
            "description": "User's avatar"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MzA0Yzg0YmQxNjgwMzBkOTIyMDQ3YyIsImlhdCI6MTY4MDk0NTI5NSwiZXhwIjoxNjgxMDMxNjk1fQ.mqGKd15X-SXUafsR9tFw2BucuG9bmINW_rac35ETj4s",
            "description": "User's personal token to access site resources. Created by backend after user's authorization"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of creating user's data"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of updating user's data"
          }
        }
      },
      "Service": {
        "type": "object",
        "required": ["name", "time", "address", "email", "phone"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Backend-generated unique identifier."
          },
          "name": {
            "type": "object",
            "required": ["en", "ua"],
            "properties": {
              "en": {
                "type": "string",
                "example": "Whiskas",
                "description": "Name of the service in English"
              },
              "ua": {
                "type": "string",
                "example": "????? Whiskas",
                "description": "Name of the service in Ukrainian"
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "en": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "MN": {
                      "type": "string"
                    },
                    "TU": {
                      "type": "string"
                    },
                    "WE": {
                      "type": "string"
                    },
                    "TH": {
                      "type": "string"
                    },
                    "FR": {
                      "type": "string"
                    },
                    "SA": {
                      "type": "string"
                    },
                    "SU": {
                      "type": "string"
                    }
                  }
                },
                "example": [
                  { "MN": "08:00-19:00" },
                  { "TU": "08:00-19:00" },
                  { "WE": "08:00-19:00" },
                  { "TH": "08:00-19:00" },
                  { "FR": "08:00-19:00" },
                  { "SA": "08:00-19:00" },
                  { "SU": "08:00-19:00" }
                ],
                "description": "Store hours"
              },
              "ua": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ПН": {
                      "type": "string"
                    },
                    "ВТ": {
                      "type": "string"
                    },
                    "СР": {
                      "type": "string"
                    },
                    "ЧТ": {
                      "type": "string"
                    },
                    "ПТ": {
                      "type": "string"
                    },
                    "СБ": {
                      "type": "string"
                    },
                    "НД": {
                      "type": "string"
                    }
                  }
                },
                "example": [
                  { "ПН": "08:00-19:00" },
                  { "ВТ": "08:00-19:00" },
                  { "СР": "08:00-19:00" },
                  { "ЧТ": "08:00-19:00" },
                  { "ПТ": "08:00-19:00" },
                  { "СБ": "08:00-19:00" },
                  { "НД": "08:00-19:00" }
                ],
                "description": "Графік роботи"
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "example": "Fedorivka, Kyiv Oblast",
                "description": "Address of the service"
              },
              "ua": {
                "type": "string",
                "example": "Федорівка, Київська область",
                "description": "Адреса"
              }
            }
          },
          "email": {
            "type": "string",
            "example": "whiskas@mail.com",
            "description": "Email address of the service. Must be unique value"
          },
          "phone": {
            "type": "string",
            "example": "066-555-44-33",
            "description": "Phone number of the service"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of creating service data"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of updating serviсe data"
          }
        }
      },
      "Notice": {
        "type": "object",
        "required": [
          "category",
          "title",
          "name",
          "birthdate",
          "breed",
          "sex",
          "location",
          "comments"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Backend-generated unique identifier."
          },
          "category": {
            "type": "string",
            "enum": ["sell", "lost-found", "for-free"],
            "default": "sell",
            "description": "Notice categories"
          },
          "title": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "minLength": 2,
                "maxLength": 48,
                "description": "Notice title in English",
                "example": "Cat"
              },
              "ua": {
                "type": "string",
                "minLength": 2,
                "maxLength": 48,
                "description": "Notice title in Ukrainian",
                "example": "Кіт"
              }
            }
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 16,
            "description": "Pet's name",
            "example": "Barsik"
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Pet's day of birth"
          },
          "breed": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "minLength": 2,
                "maxLength": 24,
                "description": "Pet's breed in English",
                "example": "Persian cat"
              },
              "ua": {
                "type": "string",
                "minLength": 2,
                "maxLength": 24,
                "description": "Pet's breed in Ukrainian",
                "example": "Персидський кіт"
              }
            }
          },
          "sex": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "Pet's sex"
          },
          "location": {
            "type": "object",
            "properties": {
              "city": {
                "type": "object",
                "properties": {
                  "en": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 36,
                    "description": "Pet's city in English",
                    "example": "Vorzel"
                  },
                  "ua": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 36,
                    "description": "Pet's city in Ukrainian",
                    "example": "Ворзель"
                  }
                }
              },
              "region": {
                "type": "object",
                "properties": {
                  "en": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 48,
                    "description": "Pet's region in English",
                    "example": "Kyiv"
                  },
                  "ua": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 48,
                    "description": "Pet's region in Ukrainian",
                    "example": "Київ"
                  }
                }
              }
            }
          },
          "comments": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "minLength": 8,
                "maxLength": 120,
                "description": "Notice comments in English",
                "example": "Sell a good cat"
              },
              "ua": {
                "type": "string",
                "minLength": 8,
                "maxLength": 120,
                "description": "Notice comments in Ukrainian",
                "example": "Продаю хорошого кота"
              }
            }
          },
          "price": {
            "type": "number",
            "default": 0,
            "description": "Pet's price"
          },
          "favorite": {
            "type": "boolean",
            "default": false,
            "description": "Notice status"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
            "description": "Notice image"
          },
          "owner": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Owner's unique identifier."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of notice creating"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of notice updating"
          }
        }
      },
      "Pet": {
        "type": "object",
        "required": ["name", "birth", "breed"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Backend-generated unique identifier."
          },
          "name": {
            "type": "string",
            "example": "Murzik",
            "description": "Pet's name"
          },
          "birth": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Pet's day of birth"
          },
          "breed": {
            "type": "string",
            "example": "Persian cat",
            "description": "Pet's breed"
          },
          "photo": {
            "type": "string",
            "example": "https://t3.gstatic.com/licensed-image?q=tbn:ANd9GcQ0suktJEBOYsgOoqYzT-aO4ZmHdxrxVkiyXSmiPmazPwoaHJQtL1sX-sXcPdMldK_m",
            "description": "Pet image"
          },
          "comments": {
            "type": "string",
            "minLength": 8,
            "maxLength": 120,
            "example": "Vaccinated on time, twice a year.",
            "description": "Pet card comments"
          },
          "owner": {
            "type": "string",
            "example": "642fdf8745bc73b2aecbae7b",
            "description": "Owner's unique identifier."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of notice creating"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-12T07:28:49.493Z",
            "description": "Backend-generated date and time of notice updating"
          }
        }
      },
      "ServerError": {
        "description": "Internal Server Error",
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "default": "Server Error"
          }
        }
      },
      "NotFoundError": {
        "description": "Not Found",
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "default": "Not found"
          }
        }
      }
    }
  }
}
